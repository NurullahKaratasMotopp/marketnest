name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8 (optional)
      run: |
        pip install flake8
        # Stop build if syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check for other issues (warnings only)
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        pip install pytest
        pytest tests/ -v --tb=short

    - name: Test API endpoints
      run: |
        python -m uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 5
        
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/health || exit 1
        
        pkill -f uvicorn

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit

    - name: Security scan with Safety
      run: safety check --json || true

    - name: Security scan with Bandit
      run: bandit -r . -f json || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create deployment package
      run: |
        mkdir -p dist
        cp -r app dist/
        cp main.py dist/
        cp requirements.txt dist/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: marketnest-build
        path: dist/

  notify:
    runs-on: ubuntu-latest
    needs: [test, security-scan, build]
    if: always()

    steps:
    - name: Notify Success
      if: needs.test.result == 'success' && needs.security-scan.result == 'success'
      run: echo "✅ All checks passed! Ready for deployment."

    - name: Notify Failure
      if: needs.test.result == 'failure' || needs.security-scan.result == 'failure'
      run: |
        echo "❌ Pipeline failed!"
        echo "Tests: ${{ needs.test.result }}"
        echo "Security: ${{ needs.security-scan.result }}"
        exit 1